name: =Dev=-Download DB-IP's file. 

on:
  workflow_dispatch:
  #schedule:
  #  - cron: '0 1 * * *'
  #push:
  #  branches:
  #    - dev
      
jobs:
  build:
    name: Downloader
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Set variables
        run: |
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "RELEASE_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
        shell: bash
        
      - name: Cache Chrome
        id: cache-chrome
        uses: actions/cache@v3.3.2
        with:
          path: |
            /opt/hostedtoolcache/chromium/114.0.5735.133/x64
          key: chrome-114

      - name: Setup Chrome
        if: steps.cache-chrome.outputs.cache-hit != 'true'
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: '114'
        id: setup-chrome
        
      - name: Check Chrome Version
        #run: echo "CHROME_PATH=${{ steps.setup-chrome.outputs.chrome-path }}" >> $GITHUB_ENV
        run: echo "CHROME_PATH=/opt/hostedtoolcache/chromium/114.0.5735.133/x64/chrome" >> $GITHUB_ENV

      - name: Print specific environment variable
        run: |
          echo $CHROME_PATH
          echo $TAG_NAME
          echo $RELEASE_NAME
          
      - name: Download Downloaded_files.log artifact
        uses: dawidd6/action-download-artifact@v3.0.0
        with:
          name: downloaded-files-log
        continue-on-error: true

      - name: Copy Downloaded_files.log content to LogFileForCheckUpdated.flag. 
        run: |
          cat ./Downloaded_files.log | tee LogFileForCheckUpdated.flag || exit 1

      - name: Build and Run Dev-downloader.go
        run: |
          go run Dev-downloader.go

      - name: Upload Downloaded_files.log as artifact
        uses: actions/upload-artifact@v4
        with:
          name: downloaded-files-log
          path: ./Downloaded_files.log
          
      - name: Check for no-updates flag
        run: |
          if [ -f "no-updates.flag" ]; then
            echo "No updates found, skipping subsequent steps."
            echo "SKIP_SUBSEQUENT_STEPS=true" >> $GITHUB_ENV
            exit 0
          fi

      - name: Move files to publish directory
        if: env.SKIP_SUBSEQUENT_STEPS != 'true'
        run: |
          mkdir -p publish
          mv ./output/*.gz ./*.log ./publish/
          ls -alh ./publish

      - name: Set up Git LFS
        if: env.SKIP_SUBSEQUENT_STEPS != 'true'
        run: |
          sudo apt-get install git-lfs
          git lfs install

      - name: Track specific .gz files with Git LFS
        if: env.SKIP_SUBSEQUENT_STEPS != 'true'
        run: |
          git lfs track "dbip-city-lite-*.csv.gz"
          git add .gitattributes

      - name: Commit .gitattributes
        if: env.SKIP_SUBSEQUENT_STEPS != 'true'
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "47710598+github-actions[bot]@users.noreply.github.com"
          git commit -m "Track specific .gz files with Git LFS" .gitattributes

      - name: Rename & Generate sha256 checksum for all files
        if: env.SKIP_SUBSEQUENT_STEPS != 'true'
        run: |
          cd ./publish || exit 1
          for file in dbip-*.csv.gz; do
              newname=$(echo "$file" | sed -E 's/-[0-9]{4}-[0-9]{2}.csv.gz/.csv.gz/')
              mv "$file" "$newname"
          done
          for file in dbip-*.mmdb.gz; do
              newname=$(echo "$file" | sed -E 's/-[0-9]{4}-[0-9]{2}.mmdb.gz/.mmdb.gz/')
              mv "$file" "$newname"
          done
          for name in $(ls *.gz); do
            sha256sum ${name} > ./${name}.sha256sum
          done

      - name: Git push assets to "Dev-release" branch of dev
        if: env.SKIP_SUBSEQUENT_STEPS != 'true'
        run: |
          cd ./publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "47710598+github-actions[bot]@users.noreply.github.com"
          git lfs track "dbip-city-lite-*.csv.gz" # 重新设置 Git LFS 跟踪
          git add .gitattributes
          git commit -m "Configure LFS tracking"
          git checkout -b release
          git add -A
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add DP-IP "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u DP-IP release

      - name: Upload files to GitHub release
        if: env.SKIP_SUBSEQUENT_STEPS != 'true'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: ./publish/*
          tag: ${{ env.TAG_NAME }}
